#!/usr/bin/env python
from nanoservices import __version__
from nanoservices.yaml2rdf import create_rdf_graph_from_yaml
from nanoservices.enrichment import enrichment
from nanoservices.rdf2puml import rdf2pumlServices
from nanoservices.implementation import implementation

import argparse

parser = argparse.ArgumentParser(description="nano cli")
parser.add_argument("--cim", help="architecture cim model")
parser.add_argument("--version", action='store_true' , help="print naoservices version")

args = parser.parse_args()


if args.version:
    print("Version",__version__)

if args.cim:
    with open(args.cim,'r',encoding="UTF-8") as f:
        txt = f.read()
        graph = create_rdf_graph_from_yaml(txt)
        #enrichment aka convert from cim to pim model
        enrichment(graph)

        puml = rdf2pumlServices(graph)
        txt = '\n'.join(puml.puml)
        print(txt)
        # from pim to psm
        ## create tasks
        project = implementation(graph)
        for task in project.tasks:
            print("Task",task.name,task.pattern)
            for asset in task.assets:
                print("","Implement",asset)
        ## create implementation
        